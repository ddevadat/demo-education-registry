version: "2.4"
x-redash-service: &redash-service
  image: redash/redash:8.0.0.b32245
  depends_on:
    - db
    - redis
  env_file: ./.env
  restart: always
x-redash-environment: &redash-environment
  REDASH_LOG_LEVEL: "INFO"
  REDASH_REDIS_URL: "redis://redis:6379/0"
  REDASH_DATABASE_URL: "postgresql://postgres:postgres@db/registry"
  REDASH_RATELIMIT_ENABLED: "false"
  REDASH_GUNICORN_TIMEOUT: 60
services:
  redis:
    image: redis
    ports:
      - "6379:6379"
  es:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.10.1
    environment:
      - discovery.type=single-node
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
    ports:
      - "9200:9200"
      - "9300:9300"
    healthcheck:
      test: ["CMD", "curl", "-f", "localhost:9200/_cluster/health"]
      interval: 30s
      timeout: 10s
      retries: 4
  db:
    image: postgres
    env_file: ./.env
    volumes:
      - ./db-data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_DB=registry
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
  registry:
    image: varadeth/sunbird-rc-core:metrics
    environment:
      - authentication_enabled=true
      - signature_enabled=true
      - pdf_url=http://certificate-api:8078/api/v1/certificatePDF
      - certificate_health_check_url=http://certificate-api:8078/health
      - sign_url=http://certificate-signer:8079/sign
      - verify_url=http://certificate-signer:8079/verify
      - sign_health_check_url=http://certificate-signer:8079/health
      - enable_external_templates=true
      - connectionInfo_uri=jdbc:postgresql://db:5432/registry
      - connectionInfo_username=postgres
      - connectionInfo_password=postgres
      - elastic_search_connection_url=es:9200
      - search_providerName=dev.sunbirdrc.registry.service.ElasticSearchService
      - sunbird_sso_realm=sunbird-rc
      - sunbird_sso_url=http://demo-admin-portal.sunbirdrc.oci/auth
      - sunbird_sso_admin_client_id=admin-api
      - sunbird_sso_admin_client_secret=${KEYCLOAK_SECRET}
      - sunbird_sso_client_id=registry-frontend
      - claims_url=http://claim-ms:8082
      - sunbird_keycloak_user_set_password=true
      - sunbird_keycloak_user_password=abcd@123
      - filestorage_connection_url=http://file-storage:9000
      - filestorage_access_key=admin
      - filestorage_secret_key=ced9862ea6
      - filestorage_bucket_key=ndear
      - external_entities=board-cbse
      - metrics_enabled=true
      - metrics_topic=metrics
      - event_providerName=dev.sunbirdrc.registry.service.impl.KafkaEventService
      - kafka_bootstrap_address=kafka:9092
    ports:
      - "8081:8081"
    volumes:
      - ${PWD}/schemas:/home/sunbirdrc/config/public/_schemas
    depends_on:
      es:
        condition: service_healthy
      db:
        condition: service_started
  keycloak:
    image: dockerhub/sunbird-rc-keycloak:nonce
    volumes:
      - ${PWD}/imports:/opt/jboss/keycloak/imports
    environment:
      - DB_VENDOR=postgres
      - DB_ADDR=db
      - DB_PORT=5432
      - DB_DATABASE=registry
      - DB_USER=postgres
      - DB_PASSWORD=postgres
      - KEYCLOAK_USER=admin
      - KEYCLOAK_PASSWORD=admin
      - KEYCLOAK_IMPORT=/opt/jboss/keycloak/imports/realm-export.json
      - PROXY_ADDRESS_FORWARDING=true
      - KEYCLOAK_LOGO=https://raw.githubusercontent.com/Sunbird-RC/demo-education-registry/federated_edu_registry/imports/ndearLogo.svg
      - KEYCLOAK_PORTAL_TITLE=Education
      - KEYCLOAK_PORTAL_SUB_TITLE=
      - VALIDATE_NONCE=false
      - KEYCLOAK_FRONTEND_URL=http://demo-admin-portal.sunbirdrc.oci/auth
      
    healthcheck:
      test:
        ["CMD-SHELL", "curl -f http://localhost:9990/ || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 5
    ports:
      - "8080:8080"
      - "9990:9990"
    depends_on:
      db:
        condition: service_started
  claim-ms:
    image: dockerhub/sunbird-rc-claim-ms:v0.0.13
    environment:
      - connectionInfo_uri=jdbc:postgresql://db:5432/registry
      - connectionInfo_username=postgres
      - connectionInfo_password=postgres
      - sunbirdrc_url=http://registry:8081
      - logging.level.root=DEBUG
    ports:
      - "8082:8082"
    depends_on:
      db:
        condition: service_started
      registry:
        condition: service_started
  file-storage:
    image: quay.io/minio/minio
    volumes:
      - ./minio/data:/data
    environment:
      - MINIO_ROOT_USER=admin
      - MINIO_ROOT_PASSWORD=ced9862ea6
    command: server --address 0.0.0.0:9000 --console-address 0.0.0.0:9001 /data
    ports:
      - "9003:9000"
      - "9002:9001"
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:9000/minio/health/live" ]
      interval: 30s
      timeout: 20s
      retries: 3
  certificate-signer:
    image: dockerhub/sunbird-rc-certificate-signer
    environment:
      - PORT=8079
    ports:
      - "8079:8079"
    volumes:
      - ./imports:/etc/signer
    healthcheck:
      test:
        [ "CMD-SHELL", "curl -f http://localhost:8079/health || exit 1" ]
      interval: 30s
      timeout: 10s
      retries: 10
  certificate-api:
    image: dockerhub/sunbird-rc-certificate-api
    environment:
      - PORT=8078
    ports:
      - "8078:8078"
    healthcheck:
      test:
        [ "CMD-SHELL", "wget -nv -t1 --spider http://localhost:8078/health || exit 1" ]
      interval: 30s
      timeout: 10s
      retries: 10
  server:
    <<: *redash-service
    command: server
    ports:
      - "5678:5000"
    environment:
      <<: *redash-environment
      REDASH_WEB_WORKERS: 4
  scheduler:
    <<: *redash-service
    command: scheduler
    environment:
      <<: *redash-environment
      QUEUES: "celery"
      WORKERS_COUNT: 1
  scheduled_worker:
    <<: *redash-service
    command: worker
    environment:
      <<: *redash-environment
      QUEUES: "scheduled_queries,schemas"
      WORKERS_COUNT: 1
  adhoc_worker:
    <<: *redash-service
    command: worker
    environment:
      <<: *redash-environment
      QUEUES: "queries"
      WORKERS_COUNT: 2
  nginx:
    # image: dockerhub/sunbird-rc-nginx
    image: dockerhub/ocisunbird-rc-admin-portal:test
    volumes:
      - ./deploy/nginx.conf:/etc/nginx/conf.d/default.conf
      - ./deploy/config.json:/usr/share/nginx/html/admin/assets/config/config.json
      - ./deploy/ui-config:/usr/share/nginx/html/admin/assets/config/ui-config
    ports:
      - "80:80"
    depends_on:
      - server
    links:
      - server:redash
    restart: always
  metrics:
    image: varadeth/sunbird-rc-metrics:metrics
    environment:
      CLICK_HOUSE_URL: clickhouse:9000
      CLICKHOUSE_DATABASE: default
      KAFKA_BOOTSTRAP_SERVERS: kafka:9092
      KAFKA_METRICS_TOPIC: metrics
    ports:
      - "8070:8070"
    depends_on:
      kafka:
        condition: service_started
  clickhouse:
    image: clickhouse/clickhouse-server:head-alpine
    ports:
      # - "9004:9000"
      - "8123:8123"
    healthcheck:
      test: wget --no-verbose --tries=1 --spider http://localhost:8123/ping || exit 1
  kafka:
    image: confluentinc/cp-kafka:latest
    depends_on:
      zookeeper:
        condition: service_started
    ports:
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: "1"
      KAFKA_ZOOKEEPER_CONNECT: "zookeeper:2181"
      KAFKA_ADVERTISED_LISTENERS: "INTERNAL://kafka:9092,OUTSIDE://localhost:9094"
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: "INTERNAL:PLAINTEXT,OUTSIDE:PLAINTEXT"
      KAFKA_INTER_BROKER_LISTENER_NAME: "INTERNAL"
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: "1"
    healthcheck:
      test:
        [ "CMD", "kafka-topics", "--list", "--zookeeper", "zookeeper:2181" ]
      interval: 30s
      timeout: 10s
      retries: 10
  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    ports:
      - "2181:2181"
    environment:
      ZOOKEEPER_CLIENT_PORT: "2181"
      ZOOKEEPER_TICK_TIME: "2000"
  bulk_issuance:
    image: sunbirdrc/sunbird-rc-bulk-issuance:bulk
    ports:
      - "5665:5665"
    environment:
      REGISTRY_BASE_URL: http://registry:8081/
      DATABASE_HOST: db
  digilocker_certificate_api:
    image: sunbirdrc/sunbird-rc-digilocker-certificate-api
    ports:
      - "8087:8087"
    environment:
      KEYCLOAK_TOKEN_URL: https://demo-education-registry.xiv.in/auth/realms/sunbird-rc/protocol/openid-connect/token
      KEYCLOAK_CLIENT_ID: admin-api
      KEYCLOAK_CLIENT_SECRET: ${KEYCLOAK_SECRET}
      DIGILOCKER_HMAC_AUTHKEY: ${DIGILOCKER_HMAC_AUTHKEY}
      DIGILOCKER_AUTH_KEYNAME: x-digilocker-hmac
      REGISTRY_URL: https://demo-education-registry.xiv.in/registry/
      TEMPLATE_MAPPER: '{"SACER":"html"}'
      SCHEMA_MAPPER: '{"SACER":"ScholarshipForTopClassStudents"}'
      LOG_LEVEL: info
      MODE: release
      HOST: 0.0.0.0
      PORT: 8087
  context-proxy-service:
    image: dockerhub/sunbird-rc-context-proxy-service
    ports:
      - "4400:4400"
    healthcheck:
      test: [ "CMD", "curl", "-f", "localhost:4400/health" ]
      interval: 30s
      timeout: 10s
      retries: 10
  public-key-service:
    image: dockerhub/sunbird-rc-public-key-service
    environment:
      - CONFIG_BASE_PATH=/etc/keys
    ports:
      - "3300:3300"
    healthcheck:
      test: [ "CMD", "curl", "-f", "localhost:3300/public-key-service/api/v1/health" ]
      interval: 30s
      timeout: 10s
      retries: 10
    volumes:
      - ./imports:/etc/keys